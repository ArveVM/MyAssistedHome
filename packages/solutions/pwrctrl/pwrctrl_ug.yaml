# idea stolen from https://github.com/erlendsellie/HomeAssistantConfig/blob/master/packages/power_usage.yaml
# check with Erlend how to filter theese???

# Hirarki of power consumption
# tracking major consumption-devices, and calculate "others" so that;
# Total = CarCharger + HotWater + Heating + Lights + Appliances + Mulitimedia + Other

#  NB,, ,in a process of re-writing this to use PowerCalc to group/create power-sensors,,
#        still a bit of cleanup left (as most solutions I have :))

# First add some customizations:
homeassistant:
  customize:
    package.node_anchors:
      # Add node-anchor for identification of code-location for created sensors
      solution_attribute_to_entity: &solution_attribute
        solution: "PwrCtrl Use"
      solution_attribute_to_input_entity: &solution_input_attribute
        solution input to: "PwrCtrl Use"

      # Adding node-anchor(s)/ for 'input-sensors' to use as variables
      # and to ensure re-use of specific "internal sensors" in automations/templates below
      #poweron: &poweron sensor.pwrctrl_entity_on # re-use when counting power if there is no switch-entity, but a power-entity is awailable
      #energy: &energy sensor.entry_heater_puck_energy                           # sensor for consumption kwH

    # tagging entities used (as input) by this file/Solution with the 'Solution name' as an attribute:
    sensor.evahan_power:
      <<: *solution_input_attribute
    binary_sensor.hotwater_puck_input:
      <<: *solution_input_attribute

    # tagging entities created in this file/Solution with the 'Solution name' as an attribute:
    #input_boolean.hotwater_temp_thermostat_output:
    #  <<: *solution_attribute



powercalc:
  sensors:
    - create_group: PwrCtrl UG All
      ignore_unavailable_state: true
      create_energy_sensor: true
      create_utility_meters: true
      entities:
        - create_group: PwrCtrl UG Carcharger
          create_energy_sensor: true
          create_utility_meters: true
          ignore_unavailable_state: true
          entities:
            - entity_id: sensor.dummy
              name: Bathroom lights
              fixed:
                power: >
                  {{ (states('sensor.easee1_power') | float(0)) * 1000 | round }}     # Easee reports in KWh, must change to W
                #"{{ states('sensor.easee1_power') | float(0)) | round * 1000 }}"    

        - create_group: PwrCtrl UG Hotwater
          create_energy_sensor: true
          create_utility_meters: true
          ignore_unavailable_state: true
          entities:
            - entity_id: binary_sensor.hotwater_puck_input
              fixed:
                power: 2850

        - create_group: PwrCtrl UG Heating
          create_energy_sensor: true
          create_utility_meters: true
          ignore_unavailable_state: true
          entities:
            - entity_id: switch.laundry_heater_puck
              power_sensor_id: sensor.laundry_heater_puck_power
            - entity_id: switch.kitchen_heater
              power_sensor_id: sensor.kitchen_heater_power
            - entity_id: switch.kitchen_heatpump_plug
              ignore_unavailable_state: true
              power_sensor_id: sensor.kitchen_heatpump_plug_power
            - entity_id: switch.livingroom_heater_plug
              power_sensor_id: sensor.livingroom_heater_plug_power
            - entity_id: switch.bathroom_heater_puck
              power_sensor_id: sensor.bathroom_heater_puck_power
            - entity_id: switch.bathroom2_heater_puck
              power_sensor_id: sensor.bathroom2_heater_puck_power
            - entity_id: switch.office_heater_plug
              power_sensor_id: sensor.office_heater_plug_power
            - entity_id: sensor.kidl_floor_heater_power
              power_sensor_id: sensor.kidl_floor_heater_power
            - entity_id: switch.entry_heater_puck
              power_sensor_id: sensor.entry_heater_puck_power
            - entity_id: switch.icehouse_heater             # heater on Ikea-plug
              fixed:
                power: 2000

        - create_group: PwrCtrl UG Lights
          create_energy_sensor: true
          create_utility_meters: true
          ignore_unavailable_state: true
          entities:
            - entity_id: sensor.laundry_lights_all_power
              power_sensor_id: sensor.laundry_lights_all_power
            - entity_id: sensor.kitchen_lights_all_power
              power_sensor_id: sensor.kitchen_lights_all_power
            - entity_id: sensor.livingroom_lights_all_power
              power_sensor_id: sensor.livingroom_lights_all_power
            - entity_id: sensor.hallway_lights_all_power
              power_sensor_id: sensor.hallway_lights_all_power
            - entity_id: sensor.loft_lights_all_power
              power_sensor_id: sensor.loft_lights_all_power
            #- entity_id: sensor.kidl
            #  power_sensor_id: sensor.kidl
            - entity_id: sensor.kidm_lights_all_power
              power_sensor_id: sensor.kidm_lights_all_power
            - entity_id: sensor.ice_house_lights_all_power
              power_sensor_id: sensor.ice_house_lights_all_power
            - entity_id: sensor.outside_lights_all_power
              power_sensor_id: sensor.outside_lights_all_power

        - create_group: PwrCtrl UG Appliances
          create_energy_sensor: true
          create_utility_meters: true
          ignore_unavailable_state: true
          entities:
            - entity_id: switch.dishwasher_plug
              power_sensor_id: sensor.dishwasher_plug_power
            - entity_id: switch.laundry_washer_puck
              power_sensor_id: sensor.laundry_washer_puck_power
            - entity_id: swithc.laundry_dryer_plug
              power_sensor_id: sensor.laundry_dryer_plug_power
            - entity_id: switch.workshop_washer
              power_sensor_id: sensor.workshop_washer_power
            - entity_id: switch.laundry_freezer
              power_sensor_id: sensor.laundry_freezer_power
            - entity_id: switch.freezerdownstairs
              power_sensor_id: sensor.freezerdownstairs_power

        - create_group: PwrCtrl UG Multimedia
          ignore_unavailable_state: true
          create_energy_sensor: true
          create_utility_meters: true
          entities:
            - entity_id: switch.server_rack_plug
              ignore_unavailable_state: true
              power_sensor_id: sensor.server_rack_plug_power
            - create_group: PwrCtrl UG Googles
              entities:
                - entity_id: media_player.kitchen_googlemini
                  ignore_unavailable_state: true
                  manufacturer: Google
                  model: Google Home Mini
                - entity_id: media_player.smartclock_kidl
                  ignore_unavailable_state: true
                  manufacturer: lenovo
                  model: Lenovo Smart Clock
                - entity_id: media_player.smartclock_kidm
                  ignore_unavailable_state: true
                  manufacturer: lenovo
                  model: Lenovo Smart Clock
                - entity_id: media_player.smartclock_kids
                  ignore_unavailable_state: true
                  manufacturer: lenovo
                  model: Lenovo Smart Clock
                
                - entity_id: media_player.samsungq80_65         # source: measured with ShellyPlugS,, less than https://www.displayspecifications.com/en/model-power-consumption/eb021d4a
                  fixed:
                    power: 135
                  standby_power: 0.5
                - entity_id: media_player.samsungtv_loft         # source: https://www.avforums.com/products/led-lcd-tvs.90/samsung-ue55h6200.9084/specs/?content_id=10914
                  fixed:
                    power: 71
                  standby_power: 0.2


template:
  - sensor:
      - name: PwrCtrl UG unGrouped
        unique_id: 62e5770e-0233-4f6c-a7f9-3c32fb57d520
        unit_of_measurement: W
        icon: mdi:power-plug
        attributes:
          <<: *solution_attribute
        state: >
          {% set main = states('sensor.pwrctrl_use_total_power') | int(default=0)%}
          {{max(0,main
          - states('sensor.pwrctrl_ug_all_power') | int(default=0)
          )}}

      - name: PwrCtrl Use unGroupedNegative
        unit_of_measurement: W
        icon: mdi:power-plug
        attributes:
          <<: *solution_attribute
        state: >
          {% set main = states('sensor.pwrctrl_use_total_power') | int(default=0)%}
          {{min(0,main
          - states('sensor.pwrctrl_use_grouped_power') | int(default=0)
          )}}

      - name: power_usage_ungrouped_negative
        unique_id: power_usage_ungrouped_negative
        unit_of_measurement: W
        icon: mdi:power-plug
        attributes:
          <<: *solution_attribute
        state: >
          {% set main = states('sensor.power_usage_total') | int(default=0)%}
          {{min(0,main
          - states('sensor.power_usage_carcharger') | int(default=0)
          - states('sensor.power_usage_heating') | int(default=0)
          - states('sensor.power_usage_hotwater') | int(default=0) 
          - states('sensor.power_usage_lights') | int(default=0)
          - states('sensor.power_usage_appliances') | int(default=0) 
          )}}

utility_meter:
  pwrctrl_use_inst_energy_hourly:
    source: sensor.pwrctrl_use_inst_energy
    name: PwrCtrl Use inst energy hourly
    cycle: hourly


sensor:
  - platform: integration
    unique_id: 7b7d263b-3b20-44bd-8f57-4112aa889ad0
    name: PwrCtrl Use inst energy
    source: sensor.evahan_power
    method: left
    unit_prefix: k
    round: 2


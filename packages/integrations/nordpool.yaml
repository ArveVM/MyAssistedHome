###############################################################################
#   @author       :   ArveVM 
#   @date         :   21.march.2022
#   @integration  :   HACS; Nordpool
#   @description  :   get today/tomorrow's prices on  
#   @basic concept: 
#      Integration get new prices at mid-day for the next day
#      load price pr hour of the day into entities in a sensor 
#
#   AVM: integration added via HACS; 
#      config in /config/custom_components/nordpool   and HACS-intgrations
#   some config in HACS-intgration ?
#
#   Again, tip and shitload of guiding from mrRR
#
#   HACS-repository:    https://github.com/custom-components/nordpool
#   Nordpool glossary:  https://www.energiforetagen.se/globalassets/energiforetagen/det-erbjuder-vi/kurser-och-konferenser/krisutbildningar/nord-pool-spot-glossary.pdf
#
###############################################################################


#logger:
#  default: info
#  logs:
#    nordpool: debug
#    custom_components.nordpool: debug
#    custom_components.nordpool.sensor: debug
#    custom_components.nordpool.aio_price: debug





# Additional config, see documentation for references:
    # This option allows the usage of a template to add a tariff.
    # now() always refers start of the hour of that price.
    # this way we can calculate the correct costs add that to graphs etc.
    # The price result of the additional_costs template expects this additional cost to be in kWh and not cents as a float
    # default {{0.0|float}}

#input_number:
#  nordpool_hi:
#    name: Nordpool_1
#    initial: 15
#    min: 0
#    max: 100
#    step: 1
#  nordpool_input_low:
#    name: "Nordpool input low"
#    initial: 5
#    min: 0
#    max: 100
#    step: 0.01

    # i tillegg til spotpris så kjem følgande tillegg (summer inkl mva) 
    # Wattn 1,25 øre, enova 1,25 øre, fastbeløp (2500,-pr år/26000prår=9,62øre,   forbruksavgift 11,14 øre, nettleie 23,75 øre
#  nordpool_additional_cost:
#    name: Nordpool_add
#    initial: 0.4701    # NB; her er det kr som gjelder,, konverteres til øre i nordpool-sensoren!
#    min: 0
#    max: 100
#    step: 0.0001

    
# nordpool:
    
# sensor:
#   - platform: nordpool

#     # Should the prices include vat? Default True
#     VAT: False

#     # What currency the api fetches the prices in
#     # this is only need if you want a sensor in a non local currecy
#     # currency: "EUR"

#     # Helper so you can set your "low" price
#     # low_price = hour_price < average * low_price_cutoff
#     #low_price_cutoff: 0.95
#     low_price_cutoff: 0.95

#     # What power regions your are interested in.
#     # Possible values: "DK1", "DK2", "FI", "LT", "LV", "Oslo", "Kr.sand", "Bergen", "Molde", "Tr.heim", "Tromsø", "SE1", "SE2", "SE3","SE4", "SYS", "EE"
#     region: "Molde"

#     # How many decimals to use in the display of the price
#     precision: 2

#     # What the price should be displayed in default
#     # Possible values: MWh, kWh and Wh
#     # default: kWh
#     price_type: kWh

#     # This option allows the usage of a template to add a tariff.
#     # now() always refers start of the hour of that price.
#     # this way we can calculate the correct costs add that to graphs etc.
#     # The price result of the additional_costs template expects this additional cost to be in kWh and not cents as a float
#     # default {{0.0|float}}
# #    additional_costs: "{{(states('input_number.nordpool_additional_cost') | float (0))}}"
    
#     # AVM; found this on FB-group,, not documented in github :)
#     price_in_cents: true

# sensor:
  ## ArveVM; please be aware that the integration creates unique-id's of the format:
  #  sensor.platformName_priceType_region_currency_precition_lowPriceCutoff_0   
  # (not sure what the last 0 stand for,, I just adjust tle lowPriceCutoff to enable multiple sensors in one region :))

  # - platform: nordpool
  #   # name: nordpool      raw spot price ->   must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 2
  #   low_price_cutoff: 0.98
  #   price_in_cents: true
  #   price_type: kWh
    # additional_costs: >
    #   {{ 0.0 }} 

  # - platform: nordpool
  #   # name: nordpool TEST      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 3
  #   low_price_cutoff: 0.97
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
  #     {% set price = current_price %}
  #     {% from 'npac.jinja' import test1 %}
  # #     {{ test1( price )}}

  # - platform: nordpool
  #   # name: nordpool 1      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 2
  #   low_price_cutoff: 0.96
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
        # {% set curr_hour = now().hour %}
        # {% set curr_month = now().month %}
        # {% set curr_price = current_price %}
        # {% from 'nordpool_additional_cost.jinja' import SpotTest %} 
        # {{ SpotTest(
        #     curr_hour,
        #     curr_month,
        #     0.029|float/1.25,
        #     curr_price,
        #     true,
        #     1b
        #     )}}

  # - platform: nordpool
  #   # name: nordpool 1      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 3
  #   low_price_cutoff: 0.90
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
  #       {% set curr_hour = now().hour %}
  #       {% set curr_month = now().month %}
  #       {% set curr_price = current_price %}
  #       {% from 'spot_additional_cost.jinja' import SpotTest %} 
  #       {{ SpotTest(
  #           curr_hour,
  #           curr_month,
  #           0.029|float/1.25,
  #           curr_price,
  #           true,
  #           1)}}



  # - platform: nordpool
  #   # name: nordpool 2      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 3
  #   low_price_cutoff: 0.95
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
  #       {% set curr_hour = now().hour %}
  #       {% set curr_month = now().month %}
  #       {% set curr_price = current_price %}
  #       {% from 'spot_additional_cost.jinja' import SpotTest %} 
  #       {{ SpotTest(
  #           curr_hour,
  #           curr_month,
  #           0.029|float/1.25,
  #           curr_price,
  #           true,
  #           2)}}

  # - platform: nordpool
  #   # name: nordpool 3      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 3
  #   low_price_cutoff: 0.94
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
  #       {% set curr_hour = now().hour %}
  #       {% set curr_month = now().month %}
  #       {% set curr_price = current_price %}
  #       {% from 'spot_additional_cost.jinja' import SpotTest %} 
  #       {{ SpotTest(
  #           curr_hour,
  #           curr_month,
  #           0.029|float/1.25,
  #           curr_price,
  #           true,
  #           3)}}

template:
  - sensor:
      - name: Nordpool Additional Cost
        state: >
          {% set current_price = (states('sensor.nordpool')|float) %}
          {% set curr_hour = now().hour %}
          {% set curr_month = now().month %}
          {% set curr_price = current_price %}
          {% from 'nordpool_additional_cost.jinja' import add_cost %} 
          {{ SpotTest(
              curr_hour,
              curr_month,
              0.029|float/1.25,
              curr_price,
              true,
              1
              )}}


  # - platform: nordpool
  #   # name: nordpool 4      must rename entity + sensor in GUI
  #   region: "Molde"
  #   currency: "NOK"
  #   VAT: false
  #   precision: 3
  #   low_price_cutoff: 0.93
  #   price_in_cents: true
  #   price_type: kWh
  #   additional_costs: >
  #       {% set curr_hour = now().hour %}
  #       {% set curr_month = now().month %}
  #       {% set curr_price = current_price %}
  #       {% from 'spot_additional_cost.jinja' import SpotTest %} 
  #       {{ SpotTest(
  #           curr_hour,
  #           curr_month,
  #           0.029|float/1.25,
  #           curr_price,
  #           true,
  #           4)}}


  #   # "{{0.0|float}}"